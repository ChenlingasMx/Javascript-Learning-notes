1.JavaScript Break 和 Continue

break 语句“跳出”循环。
continue 语句“跳过”循环中的一个迭代。

2.Break 语句
它被用于“跳出” switch 语句。

break 语句也可用于跳出循环。

break 语句会中断循环，并继续执行循环之后的代码（如果有）：


本例到值 3时停止 ：

<!DOCTYPE html>
<html>
<body>

<p>带 break 的循环</p>

<p id="demo"></p>

<script>
var text = "";
var i;
for (i = 0; i < 10; i++) {
  if (i === 3) { break; }
  text += "数字是 " + i + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>
</html>结果将会是2的时候，就停止了，因为i等于3时，就会跳出循环
数字是 0
数字是 1
数字是 2



3.Continue 语句
continue 语句中断（循环中）的一个迭代，如果发生指定的条件。然后继续循环中的下一个迭代。

本例跳过值 3 ：

如果是continue，
<!DOCTYPE html>
<html>
<body>

<p>带 continue 的循环</p>

<p id="demo"></p>

<script>
var text = "";
var i;
for (i = 0; i < 10; i++) {
  if (i === 3) { continue; }
  text += "数字是 " + i + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>
</html>/
数字是 0
数字是 1
数字是 2
数字是 4
数字是 5
数字是 6
数字是 7
数字是 8
数字是 9



4.JavaScript 标签
如需标记 JavaScript 语句，请将标签名和冒号置于语句之前：

label:
statements
break 和 continue 语句是仅有的可“跳出”代码块的 JavaScript 语句。

语法：
break labelname;

continue labelname;
continue 语句（不论有无标签引用）只能用于跳过一个迭代。

break 语句，如果没有标签引用，只能用于跳出一个循环或一个 switch。

如果有标签引用，则 break 语句可用于跳出任意代码块：

实例
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript break</h2>

<p id="demo"></p>

<script>
var cars = ["BMW", "Volvo", "porsche", "Ford"];
var text = "";

list: {
  text += cars[0] + "<br>"; 
  text += cars[1] + "<br>"; 
  break list;
  text += cars[2] + "<br>"; 
  text += cars[3] + "<br>"; 
}

document.getElementById("demo").innerHTML = text;
</script>

</body>
</html>// 结果将打印"BMW", "Volvo"
