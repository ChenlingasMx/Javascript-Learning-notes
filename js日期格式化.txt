1.JavaScript 日期输出
无论输入格式如何，JavaScript 默认将输出全文本字符串格式：

Mon Feb 19 2018 06:00:00 GMT+0800 (中国标准时间)


2.JavaScript ISO 日期
ISO 8601 是表现日期和时间的国际标准。

a.ISO 8601 语法 (YYYY-MM-DD) 也是首选的 JavaScript 日期格式：
例子：
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO 日期</h2>

<p id="demo"></p>

<script>
var d = new Date("2019-05-02");
document.getElementById("demo").innerHTML = d;
</script>

</body>
</html>

计算的日期相对于您的时区。

根据您的时区，上面的结果将在 2 月 18 日至 2 月 19 日之间变化。


b.ISO 日期（年和月）
写日期也可以不规定具体某日 (YYYY-MM)：

var d = new Date("2015-03");


c.ISO 日期（只有年）
写日期也可以不规定具体的月和日 (YYYY)：

var d = new Date("2018");


d.ISO 日期（完整的日期加时、分和秒）
写日期也可以添加时、分和秒 (YYYY-MM-DDTHH:MM:SS)：

var d = new Date("2018-02-19T12:00:00");
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO 日期</h2>

<p>用大写字母 T 分隔日期和时间。</p>

<p>用大写字母 Z 标识 UTC 时间。</p>

<p id="demo"></p>

<script>
var d = new Date("2019-05-02T12:00:00Z");
document.getElementById("demo").innerHTML = d;
</script>






3.JavaScript 完整日期
JavaScript 接受“完整 JavaScript 格式”的日期字符串：

实例
var d = new Date("Mon Feb 19 2018 06:55:23 GMT+0100 (W. Europe Standard Time)");
</body>
</html>


4.JavaScript 会忽略日期名称和时间括号中的错误：

实例
var d = new Date("Fri Mar 26 2018 09:56:24 GMT+0100 (Tokyo Time)");



5.JavaScript 短日期
短日期通常使用 "MM/DD/YYYY" 这样的语法：

实例
var d = new Date("02/19/2018");//短时间（月/日/年）
























